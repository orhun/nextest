window.SIDEBAR_ITEMS = {"fn":[["from_extractor","Create a middleware from an extractor."],["from_extractor_with_state","Create a middleware from an extractor with the given state."],["from_fn","Create a middleware from an async function."],["from_fn_with_state","Create a middleware from an async function with the given state."],["map_request","Create a middleware from an async function that transforms a request."],["map_request_with_state","Create a middleware from an async function that transforms a request, with the given state."],["map_response","Create a middleware from an async function that transforms a response."],["map_response_with_state","Create a middleware from an async function that transforms a response, with the given state."]],"mod":[["future","Future types."]],"struct":[["AddExtension","Middleware for adding some shareable value to request extensions."],["FromExtractor","Middleware that runs an extractor and discards the value."],["FromExtractorLayer","`Layer` that applies [`FromExtractor`] that runs an extractor and discards the value."],["FromFn","A middleware created from an async function."],["FromFnLayer","A [`tower::Layer`] from an async function."],["MapRequest","A middleware created from an async function that transforms a request."],["MapRequestLayer","A [`tower::Layer`] from an async function that transforms a request."],["MapResponse","A middleware created from an async function that transforms a response."],["MapResponseLayer","A [`tower::Layer`] from an async function that transforms a response."],["Next","The remainder of a middleware stack, including the handler."]],"trait":[["IntoMapRequestResult","Trait implemented by types that can be returned from [`map_request`], [`map_request_with_state`]."]]};